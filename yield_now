#!/usr/bin/env python
# python imports

from mva.analysis import get_analysis, Analysis
from rootpy.tree import Cut
from mva.samples import Data
from mva.categories.hadhad import Category_Preselection, Category_Cuts_VBF_LowDR, Category_Cuts_VBF_HighDR_Tight, Category_Cuts_VBF_HighDR_Loose, Category_Cuts_Boosted_Loose, Category_Cuts_Boosted_Tight, Category_Preselection
from mva.categories.hadhad.cbruni import hh_VBF_LowDR, hh_VBF_HighDR_Tight, hh_VBF_HighDR_Loose, hh_Boosted_Loose, hh_Boosted_Tight
from mva.categories.hadhad.common import DETA_TAUS
from mva.regions import REGIONS
#ana = Analysis( 2015, trigger=False )
#data = Data( 2015 )
#data = ana.ztautau

from mva.samples.ztautau import MadGraph_Ztautau
data = MadGraph_Ztautau(2015)
from mva.samples.others import Others
data= Others(2016)
cutlist = [
            ('Presel', Category_Preselection.get_cuts(2015)&REGIONS['OS']),
            ('VBF_highdr_Tight', Category_Cuts_VBF_HighDR_Tight.get_cuts(2015)&REGIONS['OS']),
            ('VBF_highdr_Loose', Category_Cuts_VBF_HighDR_Loose.get_cuts(2015)&REGIONS['OS']),
            ('VBF_lowdr'       , Category_Cuts_VBF_LowDR.get_cuts(2015)&REGIONS['OS']),
            ('Boosted_Loose'   , Category_Cuts_Boosted_Loose.get_cuts(2015) & REGIONS['OS']),
            ('Boosted_Tight'   , Category_Cuts_Boosted_Tight.get_cuts(2015) & REGIONS['OS']),
          ]

cutlist = [
            ('',     Cut()),
            ('Presel', Category_Preselection.get_cuts(2015)&DETA_TAUS&REGIONS['OS']),
            ('VBF_highdr_Tight', hh_VBF_HighDR_Tight.get_cuts(2015)&REGIONS['OS']),
            ('VBF_highdr_Loose', hh_VBF_HighDR_Loose.get_cuts(2015)&REGIONS['OS']),
            ('VBF_lowdr'       , hh_VBF_LowDR.get_cuts(2015)&REGIONS['OS']),
            ('Boosted_Loose'   , hh_Boosted_Loose.get_cuts(2015) & REGIONS['OS']),
            ('Boosted_Tight'   , hh_Boosted_Tight.get_cuts(2015) & REGIONS['OS']),
          ]
#cutlist = [
#            ('Eta'        , Cut()),
#            ('Charge'     , (Cut('ditau_tau0_q == 1') | Cut('ditau_tau0_q == -1'))
#                          & (Cut('ditau_tau1_q == 1') | Cut('ditau_tau1_q == -1'))
#                            ),
#            ('nTracks'    , (Cut('ditau_tau0_n_tracks == 1') | Cut('ditau_tau0_n_tracks == 3'))
#                          & (Cut('ditau_tau1_n_tracks == 1') | Cut('ditau_tau1_n_tracks == 3'))
#                          ),
#            ('tauID'      , Cut('n_taus_medium == 2')
#                          & Cut('n_taus_tight > 0')
#                          & Cut('ditau_tau0_jet_bdt_medium == 1')
#                          & Cut('ditau_tau1_jet_bdt_medium == 1')
#                          ),
#            ('tauIso'     , Cut('ditau_tau0_n_wide_tracks == 0') & Cut('ditau_tau1_n_wide_tracks == 0')),
#            ('tau pT'     , Cut('ditau_tau0_pt > 40') & Cut('ditau_tau1_pt > 30')),
#            ('OS'         , Cut('selection_opposite_sign == 1')),
#            ('MET'        , Cut('selection_met == 1')),
#            ('MET Cent'   , Cut('selection_met_centrality == 1')),
#            ('DEta'       , Cut('selection_delta_eta == 1')),
#            ('DR'         , Cut('selection_delta_r == 1')),
#            ('LepVeto'    , Cut('selection_lepton_veto ==1')
#                          & Cut('ditau_tau0_ele_bdt_loose==0')
#                          & Cut('ditau_tau1_ele_bdt_loose==0')),
#        ]

def cumucut(cuts):
    selection = None
    for n, c in cuts:
        selection = selection & c if selection else c
        print (n, selection)
        yield (n, selection)

table = []
table.append( '{0: <9}\t {1: <9}'.format('Cut', 'Unweighted') )
#for name, selection in cumucut(cutlist):
for name, selection in cutlist:
    events = data.events(cuts=selection, weighted=True)[1].value
    table.append( '{0: <9}\t {1}'.format(name, events) )
    print table[-1]
    print selection

print "Efficiencies in Data"
for line in table:
    print line

